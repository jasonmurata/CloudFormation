Parameters:
    pKeyName:
        Description: Select Key Pair
        Type: 'AWS::EC2::KeyPair::KeyName'
    pInstanceType:
        Description: Select EC2 Instance Type
        Type: String
        Default: t2.micro
        AllowedValues: 
            - t2.nano
            - t2.micro
            - t2.small
Mappings:
    mRegionMap:
        us-west-2:
            AMI: ami-0841edc20334f9287
        us-east-2:
            AMI: ami-0603cbe34fd08cb81
Resources:
  rWebServerASG:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones: !GetAZs ''
      LaunchConfigurationName: !Ref rLaunchConfig
      MinSize: '1'
      MaxSize: '3'
      LoadBalancerNames:
        - !Ref rWebServerELB
  rLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
# rWebServer:
#   Type: AWS::EC2::Instance
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          packages:
            yum:
              httpd: []
          files:
            /var/www/html/index.html:
              content: <html><body><h1>AWSome 2.0</h1></body></html>
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
    Properties:
      ImageId: !FindInMap
        - mRegionMap
        - !Ref 'AWS::Region'
        - AMI
      KeyName: !Ref pKeyName
      InstanceType:
        !Ref pInstanceType
      SecurityGroups:
        - !Ref rSecurityGroup
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
              # Python helper script to process metadata configs
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource rLaunchConfig '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

  rWebServerScaleUpPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref rWebServerASG
      Cooldown: '30'
      ScalingAdjustment: '1'
  rWebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref rWebServerASG
      Cooldown: '30'
      ScalingAdjustment: '-1'
  rCPUAlarmHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-up if CPU > 90% for 1 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '2'
      Threshold: '90'
      AlarmActions:
        - !Ref rWebServerScaleUpPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref rWebServerASG
      ComparisonOperator: GreaterThanThreshold
  rCPUAlarmLow:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Scale-down if CPU < 60% for 1 minutes
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Average
      Period: '60'
      EvaluationPeriods: '2'
      Threshold: '60'
      AlarmActions:
        - !Ref rWebServerScaleDownPolicy
      Dimensions:
        - Name: AutoScalingGroupName
          Value: !Ref rWebServerASG
      ComparisonOperator: LessThanThreshold

  rWebServerELB:
      Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
      Properties: 
        AvailabilityZones: !GetAZs ''
        CrossZone: 'true'
        Listeners:
          - LoadBalancerPort: '80'
            InstancePort: '80'
            Protocol: HTTP
        HealthCheck:
          Target: 'HTTP:80/'
          HealthyThreshold: '3'
          UnhealthyThreshold: '5'
          Interval: '30'
          Timeout: '5'
  rSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: CF Enable SSH and HTTP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 205.251.233.0/24
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
#Outputs:
#  URL:
#    Description: URL of Website
#    Value: !Join
#      - ''
#      - - 'http://'
#        - !GetAtt
#          - rWebServer
#          - rLaunchConfig
#          - PublicDnsName
#  PublicIP:
#    Description: Server Public IP
#    Value:
#      !GetAtt
#        #- rWebServer
#        - rLaunchConfig
#        - PublicIp
      